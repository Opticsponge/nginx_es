# From https://gist.github.com/karmi/986390
# Run me with:
#
#     $ nginx -p /path/to/this/file/ -c nginx.conf
#
# All requests are then routed to authenticated user's index, so
#
#    GET http://user:password@localhost:8080/_search?q=*
#
# is rewritten to:
#
#    GET http://localhost:9200/user/_search?q=*

daemon off;

worker_processes  1;

pid         nginx.pid;

events {
    worker_connections  1024;
}


http {

  server_names_hash_bucket_size  64;

  # Public API - only GET allowed
  server {

    listen       80;
    server_name  www.snapindexer.com snapindexer.com;

    error_log   elasticsearch-errors.log;
    access_log  elasticsearch.log;

    location / {

      # deny all except GET requests
      if ($request_method !~ "GET") {
        return 403;
        break;
      }

      # Deny access to Cluster API
      if ($request_filename ~ "_cluster") {
        return 403;
        break;
      }

      # Pass requests to ElasticSearch
      proxy_pass http://<proxy_pass_ip>:<proxy_pass_port>;
      proxy_redirect off;

      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;

      # Authorize access
      auth_basic "Restricted";
      auth_basic_user_file /var/www/es/.htpasswd;

      # Route all requests to authorized user's own index
      # rewrite  ^(.*)$  /$remote_user$1  break;

      # Just pass requests on to the specified index
      rewrite  ^(.*)$  $1  break;
      rewrite_log on;

      return 403;

    }
  }

  # Full access
  server {

    listen       80;
    server_name  admin.snapindexer.com;

    error_log   elasticsearch-errors.log;
    access_log  elasticsearch.log;

    location / {

      # Deny access to Cluster API
      if ($request_filename ~ "_cluster") {
        return 403;
        break;
      }

      # Pass requests to ElasticSearch
      proxy_pass http://<proxy_pass_ip>:<proxy_pass_port>;
      proxy_redirect off;

      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;

      # Authorize access
      auth_basic "Restricted";
      auth_basic_user_file /var/www/es/.htpasswd;

      # Route all requests to authorized user's own index
      # rewrite  ^(.*)$  /$remote_user$1  break;

      # Just pass requests on to the specified index
      rewrite  ^(.*)$  $1  break;
      rewrite_log on;

      return 403;

    }
  }

}
